@using HRMS.Application.ViewModel
@model EmployeeAttendanceViewModel
@{
    ViewData["Title"] = $"{Model.Employee.FullName} - Attendance Report";
    var fromDate = Model.FromDate;
    var toDate = Model.ToDate;
    var employeeId = ViewBag.EmployeeId as string;
}

<div class="card shadow-sm mt-4">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="fas fa-user-clock me-2"></i> @Model.Employee.FullName - Attendance Report</h5>
        <form method="get" class="d-flex gap-2 align-items-center">
            <input type="hidden" name="employeeId" value="@employeeId" />
            <input type="date" name="fromDate" value="@fromDate.ToString("yyyy-MM-dd")" class="form-control form-control-sm" />
            <input type="date" name="toDate" value="@toDate.ToString("yyyy-MM-dd")" class="form-control form-control-sm" />
            <button type="submit" class="btn btn-light btn-sm">
                <i class="fas fa-filter"></i> Filter
            </button>
        </form>
        <a asp-controller="Attendance" asp-action="Summary" class="btn btn-outline-light btn-sm">
            <i class="bi bi-arrow-left-circle me-1"> Back</i>
        </a>
    </div>
    <div class="card-body">
        <div class="row text-center mb-4">
            <div class="col-md-3 mb-2">
                <div class="card bg-light border-1">
                    <div class="card-body">
                        <strong>Employee ID</strong><br />@Model.Employee.EmployeeId
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <div class="card bg-light border-1">
                    <div class="card-body">
                        <strong>Email</strong><br />@Model.Employee.Email
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <div class="card bg-light border-1">
                    <div class="card-body">
                        <strong>Department</strong><br />@Model.Employee.Department?.Name - @Model.Employee.Designation
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <div class="card bg-light border-1">
                    <div class="card-body">
                        <strong>Join Date</strong><br />@Model.Employee.JoinDate.ToString("dd MMM yyyy")
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-dark text-center">
                    <tr>
                        <th>Date</th>
                        <th>Day</th>
                        <th>Check In</th>
                        <th>Check Out</th>
                        <th>Working Hours</th>
                        <th>Status</th>
                        <th>Status Reason</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.DailyAttendance)
                    {
                        <tr>
                            <td>@item.Date.ToString("dd MMM yyyy")</td>
                            <td>@item.Day</td>
                            <td>@(item.CheckIn?.ToString("hh:mm tt") ?? "-")</td>
                            <td>@(item.CheckOut?.ToString("hh:mm tt") ?? "-")</td>
                            <td>@(item.WorkingHoursDisplay ?? "-")</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(item.Status)">
                                    @item.Status
                                </span>
                            </td>
                            <td>@(item.StatusReason ?? "-")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        switch (status?.ToLower())
        {
            case "present":
                return "bg-success";
            case "late":
                return "bg-warning";
            case "absent":
                return "bg-danger";
            case "holiday":
            case "weekend":
                return "bg-info";
            case "leave":
                return "bg-primary";
            case "halfday":
                return "bg-secondary";
            default:
                return "bg-secondary";
        }
    }
}