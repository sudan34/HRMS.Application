@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var isAuthenticated = SignInManager.IsSignedIn(User);
    var isSuperAdmin = User.IsInRole("SuperAdmin");
    var isHR = User.IsInRole("HR");
    var isEmployee = User.IsInRole("Employee");
    var currentUser = await UserManager.GetUserAsync(User);
}

<ul class="list-unstyled components">
    @if (isAuthenticated)
    {
        @if (isEmployee)
        {
            <li>
                <a asp-controller="Attendance" asp-action="MyAttendance">
                    <i class="bi bi-calendar-check"></i> My Attendance
                </a>
            </li>
        }

        @if (isHR || isSuperAdmin)
        {
            <li>
                <a href="#hrSubmenu" data-bs-toggle="collapse" aria-expanded="false" class="dropdown-toggle">
                    <i class="bi bi-people-fill"></i> HR Management
                </a>
                <ul class="collapse list-unstyled" id="hrSubmenu">
                    <li>
                        <a asp-controller="Employee" asp-action="Index">
                            <i class="bi bi-person-lines-fill"></i> Employees
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Attendance" asp-action="Index">
                            <i class="bi bi-calendar-week"></i> All Attendance
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Attendance" asp-action="Summary">
                            <i class="bi bi-clipboard-data"></i> Attendance Summary
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Leave" asp-action="Index">
                            <i class="bi bi-journal-check"></i> Leave Management
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Holiday" asp-action="Calendar">
                            <i class="bi bi-calendar-heart"></i> Holiday Management
                        </a>
                    </li>
                    <li>
                        <a asp-controller="DepartmentWorkingHours" asp-action="Index">
                            <i class="bi bi-clock-history"></i> Working Hours
                        </a>
                    </li>
                </ul>
            </li>
        }

        @if (isSuperAdmin)
        {
            <li>
                <a href="#adminSubmenu" data-bs-toggle="collapse" aria-expanded="false" class="dropdown-toggle">
                    <i class="bi bi-shield-lock"></i> Administration
                </a>
                <ul class="collapse list-unstyled" id="adminSubmenu">
                    <li>
                        <a asp-controller="UserManagement" asp-action="Index">
                            <i class="bi bi-person-gear"></i> User Management
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Department" asp-action="Index">
                            <i class="bi bi-building"></i> Departments
                        </a>
                    </li>
                    <li>
                        <a asp-controller="Account" asp-action="Register">
                            <i class="bi bi-person-plus"></i> Register New User
                        </a>
                    </li>
                </ul>
            </li>
        }
    }
    else
    {

        <li>
            <a asp-controller="Home" asp-action="Index">
                <i class="bi bi-house-door"></i> Home
            </a>
        </li>
    }
</ul>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Store the active submenu in localStorage
        const submenuLinks = document.querySelectorAll('.components .dropdown-toggle');

        submenuLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                // Get the target submenu
                const targetId = this.getAttribute('href');
                const submenu = document.querySelector(targetId);

                // Toggle the submenu
                const isExpanded = this.getAttribute('aria-expanded') === 'true';
                this.setAttribute('aria-expanded', !isExpanded);
                submenu.classList.toggle('show');

                // Store the state in localStorage
                localStorage.setItem('activeSubmenu', isExpanded ? '' : targetId);
            });
        });

        // Restore the active submenu on page load
        const activeSubmenuId = localStorage.getItem('activeSubmenu');
        if (activeSubmenuId) {
            const activeLink = document.querySelector(`[href="${activeSubmenuId}"]`);
            const activeSubmenu = document.querySelector(activeSubmenuId);

            if (activeLink && activeSubmenu) {
                activeLink.setAttribute('aria-expanded', 'true');
                activeSubmenu.classList.add('show');
            }
        }

        // Prevent submenu clicks from closing the menu
        document.querySelectorAll('.components .dropdown-item').forEach(item => {
            item.addEventListener('click', function(e) {
                e.stopPropagation();
            });
        });
    });
</script>